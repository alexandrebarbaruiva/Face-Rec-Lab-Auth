.TH "Catch::AssertionResult" 3 "Mon Jun 19 2017" "TP1 Projeto 2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Catch::AssertionResult
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <catch\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBAssertionResult\fP ()"
.br
.ti -1c
.RI "\fBAssertionResult\fP (\fBAssertionInfo\fP const &info, \fBAssertionResultData\fP const &data)"
.br
.ti -1c
.RI "\fB~AssertionResult\fP ()"
.br
.ti -1c
.RI "bool \fBisOk\fP () const"
.br
.ti -1c
.RI "bool \fBsucceeded\fP () const"
.br
.ti -1c
.RI "\fBResultWas::OfType\fP \fBgetResultType\fP () const"
.br
.ti -1c
.RI "bool \fBhasExpression\fP () const"
.br
.ti -1c
.RI "bool \fBhasMessage\fP () const"
.br
.ti -1c
.RI "std::string \fBgetExpression\fP () const"
.br
.ti -1c
.RI "std::string \fBgetExpressionInMacro\fP () const"
.br
.ti -1c
.RI "bool \fBhasExpandedExpression\fP () const"
.br
.ti -1c
.RI "std::string \fBgetExpandedExpression\fP () const"
.br
.ti -1c
.RI "std::string \fBgetMessage\fP () const"
.br
.ti -1c
.RI "\fBSourceLineInfo\fP \fBgetSourceInfo\fP () const"
.br
.ti -1c
.RI "std::string \fBgetTestMacroName\fP () const"
.br
.ti -1c
.RI "void \fBdiscardDecomposedExpression\fP () const"
.br
.ti -1c
.RI "void \fBexpandDecomposedExpression\fP () const"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBAssertionInfo\fP \fBm_info\fP"
.br
.ti -1c
.RI "\fBAssertionResultData\fP \fBm_resultData\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Catch::AssertionResult::AssertionResult ()"

.SS "Catch::AssertionResult::AssertionResult (\fBAssertionInfo\fP const & info, \fBAssertionResultData\fP const & data)"

.SS "Catch::AssertionResult::~AssertionResult ()"

.SH "Member Function Documentation"
.PP 
.SS "void Catch::AssertionResult::discardDecomposedExpression () const"

.SS "void Catch::AssertionResult::expandDecomposedExpression () const"

.SS "std::string Catch::AssertionResult::getExpandedExpression () const"

.SS "std::string Catch::AssertionResult::getExpression () const"

.SS "std::string Catch::AssertionResult::getExpressionInMacro () const"

.SS "std::string Catch::AssertionResult::getMessage () const"

.SS "\fBResultWas::OfType\fP Catch::AssertionResult::getResultType () const"

.SS "\fBSourceLineInfo\fP Catch::AssertionResult::getSourceInfo () const"

.SS "std::string Catch::AssertionResult::getTestMacroName () const"

.SS "bool Catch::AssertionResult::hasExpandedExpression () const"

.SS "bool Catch::AssertionResult::hasExpression () const"

.SS "bool Catch::AssertionResult::hasMessage () const"

.SS "bool Catch::AssertionResult::isOk () const"

.SS "bool Catch::AssertionResult::succeeded () const"

.SH "Member Data Documentation"
.PP 
.SS "\fBAssertionInfo\fP Catch::AssertionResult::m_info\fC [protected]\fP"

.SS "\fBAssertionResultData\fP Catch::AssertionResult::m_resultData\fC [protected]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for TP1 Projeto 2 from the source code\&.
